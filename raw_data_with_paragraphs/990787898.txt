IEEE-488

==Origins==
In the late 1960s, Hewlett-Packard<ref>This part of HP was later (c. 1999) spun off as Agilent Technologies, and in 2014 Agilent's test and measurement division was spun off as Keysight Technologies.</ref> manufactured various automated test and measurement instruments, such as digital multimeters and logic analyzers. They developed the HP Interface Bus (HP-IB) to enable easier interconnection between instruments and controllers (computers and other instruments).
The bus was relatively easy to implement using the technology at the time, using a simple parallel bus and several individual control lines. For example, the HP 59501 Power Supply Programmer and HP 59306A Relay Actuator were both relatively simple HP-IB peripherals implemented in TTL, without the need for a microprocessor.
HP licensed the HP-IB patents for a nominal fee to other manufacturers. It became known as the General Purpose Interface Bus (GPIB), and became a de facto standard for automated and industrial instrument control. As GPIB became popular, it was formalized by various standards organizations.
==Standards==
In 1975, the IEEE standardized the bus as Standard Digital Interface for Programmable Instrumentation, IEEE&nbsp;488; it was revised in 1978 (producing IEEE&nbsp;488-1978).<ref>, p.&nbsp;iii</ref> The standard was revised in 1987, and redesignated as IEEE&nbsp;488.1 (IEEE&nbsp;488.1-1987). These standards formalized the mechanical, electrical, and basic protocol parameters of GPIB, but said nothing about the format of commands or data.
In 1987, IEEE introduced Standard Codes, Formats, Protocols, and Common Commands, IEEE&nbsp;488.2. It was revised in 1992.<ref></ref> IEEE&nbsp;488.2 provided for basic syntax and format conventions, as well as device-independent commands, data structures, error protocols, and the like. IEEE&nbsp;488.2 built on IEEE&nbsp;488.1 without superseding it; equipment can conform to IEEE&nbsp;488.1 without following IEEE&nbsp;488.2.
While IEEE&nbsp;488.1 defined the hardware and IEEE&nbsp;488.2 defined the protocol, there was still no standard for instrument-specific commands. Commands to control the same class of instrument, e.g., multimeters, varied between manufacturers and even models.
The United States Air Force,<ref>Project Mate in 1985</ref> and later Hewlett-Packard, recognized this as a problem. In 1989, HP developed their TML language<ref></ref> which was the forerunner to Standard Commands for Programmable Instrumentation (SCPI), introduced as an industry standard in 1990.<ref></ref> SCPI added standard generic commands, and a series of instrument classes with corresponding class-specific commands. SCPI mandated the IEEE&nbsp;488.2 syntax, but allowed other (non-IEEE&nbsp;488.1) physical transports.
The IEC developed their own standards in parallel with the IEEE, with IEC&nbsp;60625-1 and IEC&nbsp;60625-2 (IEC&nbsp;625), later replaced by IEC&nbsp;60488.
National Instruments introduced a backward-compatible extension to IEEE&nbsp;488.1, originally known as HS-488. It increased the maximum data rate to 8 Mbyte/s, although the rate decreases as more devices are connected to the bus. This was incorporated into the standard in 2003 (IEEE&nbsp;488.1-2003),<ref>
</ref> over HP's objections.<ref></ref><ref></ref>
In 2004, the IEEE and IEC combined their respective standards into a "Dual Logo" IEEE/IEC standard IEC&nbsp;60488-1, Standard for Higher Performance Protocol for the Standard Digital Interface for Programmable Instrumentation - Part 1: General,<ref></ref> replaces IEEE&nbsp;488.1/IEC&nbsp;60625-1, and IEC&nbsp;60488-2,Part 2: Codes, Formats, Protocols and Common Commands,<ref></ref> replaces IEEE&nbsp;488.2/IEC&nbsp;60625-2.<ref></ref>
== Characteristics ==
IEEE&nbsp;488 is an 8-bit, electrically parallel bus which employs sixteen signal lines — eight used for bi-directional data transfer, three for handshake, and five for bus management — plus eight ground return lines.
The bus supports 31 five-bit primary device addresses numbered from 0 to 30, allocating a unique address to each device on the bus.<ref name="NI-488.2"></ref><ref name="Agilent_82350B"></ref>
The standard allows up to 15 devices to share a single physical bus of up to total cable length. The physical topology can be linear or star (forked).<ref></ref> Active extenders allow longer buses, with up to 31 devices theoretically possible on a logical bus.
Control and data transfer functions are logically separated; a controller can address one device as a "talker" and one or more devices as "listeners" without having to participate in the data transfer. It is possible for multiple controllers to share the same bus, but only one can be the "Controller In Charge" at a time.<ref></ref>
In the original protocol, transfers use an interlocked, three-wire ready–valid–accepted handshake.<ref></ref> The maximum data rate is about one megabyte per second. The later HS-488 extension relaxes the handshake requirements, allowing up to 8&nbsp;Mbyte/s. The slowest participating device determines the speed of the bus.<ref></ref>
== Connectors ==
IEEE&nbsp;488 specifies a 24-pin Amphenol-designed micro ribbon connector. Micro ribbon connectors have a D-shaped metal shell, but are larger than D-subminiature connectors. They are sometimes called "Centronics connectors" after the 36-pin micro ribbon connector Centronics used for their printers.
One unusual feature of IEEE&nbsp;488 connectors is they commonly use a "double-headed" design, with male on one side, and female on the other. This allows stacking connectors for easy daisy-chaining. Mechanical considerations limit the number of stacked connectors to four or fewer, although a workaround involving physically supporting the connectors may be able to get around this.
They are held in place by screws, either UTS (now largely obsolete) or metric M3.5×0.6 threads. Early versions of the standard suggested that metric screws should be blackened to avoid confusion with the incompatible UTS threads. However, by the 1987 revision this was no longer considered necessary because of the prevalence of metric threads.<ref></ref>
The IEC&nbsp;60625 standard prescribes the use of 25-pin D-subminiature connectors (the same as used for the parallel port on IBM PC compatibles). This connector did not gain significant market acceptance against the established 24-pin connector.
==Capabilities==
More information see Tektronix.<ref></ref>
==Use as a computer interface==
HP's designers did not specifically plan for IEEE&nbsp;488 to be a peripheral interface for general-purpose computers; the focus was on instrumentation. But when HP's early microcomputers needed an interface for peripherals (disk drives, tape drives, printers, plotters, etc.), HP-IB was readily available and easily adapted to the purpose.
HP computer products which used HP-IB included the HP series 80, HP 9800 series,<ref></ref> the HP 2100 series,<ref></ref> and the HP 3000 series.<ref></ref> HP computer peripherals which did not utilize the RS-232 communication interface often used HP-IB including disc systems like the HP 7935. Some of HP's advanced pocket calculators of the 1980s, such as the HP-41 and HP-71B series, also had IEEE&nbsp;488 capabilities, via an optional HP-IL/HP-IB interface module.
Other manufacturers adopted GPIB for their computers as well, such as with the Tektronix 405x line.
The Commodore PET (introduced 1977) range of personal computers connected their peripherals using the IEEE&nbsp;488 bus, but with a non-standard card edge connector. Commodore's following 8-bit machines utilized a serial bus whose protocol was based on IEEE&nbsp;488.<ref>Bagnall, Brian (2006). On the Edge: The Spectacular Rise and Fall of Commodore, Variant Press. Page 221. </ref> Commodore marketed an IEEE&nbsp;488 cartridge for the VIC-20<ref>Commodore drawing for VIC-1112 - Drawing no. 1110010 Rev:A</ref> and the Commodore 64.<ref> urltoken Reverse-engineered schematics for Commodore C64 IEEE interface</ref> Several third party suppliers of Commodore 64 peripherals made a cartridge for the C64 that provided an IEEE&nbsp;488-derived interface on a card edge connector similar to that of the PET series.<ref> urltoken Link to schematic for one such converter.</ref>
Eventually, faster, more complete standards such as SCSI superseded IEEE&nbsp;488 for peripheral access.
== Comparison with other interface standards ==
Electrically, IEEE&nbsp;488 used a hardware interface that could be implemented with some discrete logic or with a microcontroller. The hardware interface enabled devices made by different manufacturers to communicate with a single host. Since each device generated the asynchronous handshaking signals required by the bus protocol, slow and fast devices could be mixed on one bus. The data transfer is relatively slow, so transmission line issues such as impedance matching and line termination are ignored. There was no requirement for galvanic isolation between the bus and devices, which created the possibility of ground loops causing extra noise and loss of data.
Physically, the IEEE&nbsp;488 connectors and cabling were rugged and held in place by screws. While physically large and sturdy connectors were an advantage in industrial or laboratory set ups, the size and cost of the connectors was a liability in applications such as personal computers.
Although the electrical and physical interfaces were well defined, there was not an initial standard command set. Devices from different manufacturers might use different commands for the same function.<ref>Early devices might respond to an <code>ID</code> command with an identification string; later standards had devices respond to the <code>*ID</code> command.</ref> Some aspects of the command protocol standards were not standardized until Standard Commands for Programmable Instruments (SCPI) in 1990. Implementation options (e.g. end of transmission handling) can complicate interoperability in pre-IEEE&nbsp;488.2 devices.
More recent standards such as USB, FireWire, and Ethernet take advantage of declining costs of interface electronics to implement more complex standards providing higher bandwidth. The multi-conductor (parallel data) connectors and shielded cable were inherently more costly than the connectors and cabling that could be used with serial data transfer standards such as RS-232, RS-485, USB, FireWire or Ethernet. Very few mass-market personal computers or peripherals (such as printers or scanners) implemented IEEE&nbsp;488.
==See also==
* Standard Commands for Programmable Instruments (SCPI)
* PCI eXtensions for Instrumentation (PXI)
* LAN eXtensions for Instrumentation (LXI)
* Virtual Instrument Software Architecture (VISA)
* HP series 80
* Rocky Mountain BASIC
* CBM-bus, a proprietary serial bus by Commodore
==References==
==External links==
* 
* 
* urltoken GPIB / IEEE 488 multiple page tutorial

thumb
IEEE&nbsp;488 is a short-range digital communications 8-bit parallel multi-master interface bus specification developed by Hewlett-Packard as HP-IB (Hewlett-Packard Interface Bus). It subsequently became the subject of several standards, and is generically known as GPIB (General Purpose Interface Bus).
Although the bus was created in the late 1960s to connect together automated test equipment, it also had some success during the 1970s and 1980s as a peripheral bus for early microcomputers, notably the Commodore PET. Newer standards have largely replaced IEEE&nbsp;488 for computer use, but it is still used by some test equipment.